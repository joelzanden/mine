name: Build, bump version and create release

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            binary_name: "mine-${{ github.ref_name }}-windows-x86.exe"
            binary_ext: ".exe"
          - os: macos-latest
            binary_name: "mine-${{ github.ref_name }}-macos-x86"
            binary_ext: ""
          - os: ubuntu-latest
            binary_name: "mine-${{ github.ref_name }}-linux-x86"
            binary_ext: ""

    steps:
      - uses: actions/checkout@v3

      - name: Toolchain info
        run: |
          cargo --version --verbose
          rustc --version

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: ./target/release
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Build
        run: cargo build --verbose --release

      - name: Rename output file
        run: mv "./target/release/mine${{ matrix.binary_ext }}" "./target/release/${{ matrix.binary_name }}"


      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./target/release/${{ matrix.binary_name }}
